server:
    port: ${PORT}
    error:
        include-message: always
    servlet:
        session:
            timeout: 0

    ### SSL
    ssl:
        bundle: "server"
        enabled: ${SSL_ENABLED}

spring:
    ### App
    application:
        name: ${API_NAME}
    config:
        # include .env file
        import: optional:file:.env[.properties]
    output:
        # colored terminal
        ansi:
            enabled: ALWAYS

    ### Security
    autoconfigure:
        # disable auto generated password
        exclude: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
    security:
        oauth2:
            client:
                # redirect-uri is the spring default: /login/oauth2/code/{clientRegistrationId}
                registration:
                    google: 
                        client-id: ${OAUTH2_CLIENT_ID_GOOGLE}
                        client-secret: ${OAUTH2_CLIENT_SECRET_GOOGLE}
                        scope: 
                            - email
                    github:
                        client-id: ${OAUTH2_CLIENT_ID_GITHUB}
                        client-secret: ${OAUTH2_CLIENT_SECRET_GITHUB}
                        scope: 
                            - user:email
                    azure:
                        client-id: ${OAUTH2_CLIENT_ID_AZURE}
                        client-secret: ${OAUTH2_CLIENT_SECRET_AZURE}
                        scope: 
                            - openid
                            - email
                provider:
                    google:
                        issuer-uri: ${OAUTH2_ISSUER_URI_GOOGLE}
                    github: 
                        authorization-uri: ${OAUTH2_AUTHORIZATION_URI_GITHUB}
                        token-uri: ${OAUTH2_TOKEN_URI_GITHUB}
                        user-info-uri: ${OAUTH2_USER_INFO_URI_GITHUB}
                    azure:
                        issuer-uri: ${OAUTH2_ISSUER_URI_AZURE}
                        
                        
    ### DB
    datasource:
        url: jdbc:mariadb://${DB_HOST}:${DB_PORT}/${DB_NAME}
        # h2
        # url: jdbc:h2:mem:cidb
        username: ${DB_USER}
        password: ${DB_PASSWORD}
    jpa:
        hibernate:
            ddl-auto: update
        defer-datasource-initialization: true
        open-in-view: false
        # don't validate during db actions
        properties:
            jakarta:
                persistence:
                    validation:
    h2:
        console:
            enabled: true
    sql:
        init:
            mode: ${SPRING_SQL_INIT_MODE}

    ### Mail
    mail:
        host: ${MAIL_HOST}
        port: ${MAIL_PORT}
        username: ${MAIL_USER}
        password: ${MAIL_PASSWORD}
        properties:
            mail:
                smtp:
                    auth: ${SMTP_AUTH_ENABLE}
                    starttls:
                        enable: ${MAIL_STARTTLS_ENABLE}
    ### SSL
    ssl:
        bundle:
            pem:
                server: # the "server.ss.bundle" value
                    keystore:
                        certificate: "classpath:ssl/fullchain.pem"
                        private-key: "classpath:ssl/privkey.pem"

logging:
    level:
        net:
            code_notes: ${LOG_LEVEL}
    file:
        path: ${LOG_FILE_PATH}